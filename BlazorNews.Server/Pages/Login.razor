@page "/Login"
@using System.Text.Json
@inject IUserServices _userServices
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navigationManager
@inject IAuthorizationService _authorizationService
@inject HttpClient _httpClient

<div class="single_post">
    <div class="container-fluid">
        <div class="col-md-2"></div>
        <div class="col-md-8">
            <div class="post_content text-center">
                <h3>ورود</h3>
                <main>
                    <EditForm Model="AccountDTO" OnValidSubmit="@(async () => await HandleLogin())">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label>نام کاربری</label>
                            <InputText @bind-Value="AccountDTO.UserName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>پسورد</label>
                            <input type="password" class="form-control" @bind-value="AccountDTO.Password" />
                        </div>

                        <input type="submit" class="btn btn-success" style="width: 100%" value="ورود" />
                    </EditForm>
                </main>
            </div>
        </div>
    </div>
</div>

<div class="clear-fix"></div>

@code {

    public LoginAndRegisterDTO AccountDTO { get; set; } = new LoginAndRegisterDTO();

    public async Task HandleLogin()
    {
        if (await _userServices.ExistUser(p => p.UserName == AccountDTO.UserName))
        {

            await _jsRuntime.InvokeVoidAsync("SweetAlert", "ورود با موفقیت انجام شد", "success");

            var loginJson = JsonSerializer.Serialize(AccountDTO);
            var loginStringContent = new StringContent(loginJson, System.Text.Encoding.UTF8, "application/json");

            await _httpClient.PostAsync("/api/Account/Login", loginStringContent);

            await Task.Run(() =>
            {
                _navigationManager.NavigateTo("");
            });
        }

        else
        {
            await _jsRuntime.InvokeVoidAsync("SweetAlert", "نام کاربری در سیستم وجود ندارد", "warning");
        }
    }
}
